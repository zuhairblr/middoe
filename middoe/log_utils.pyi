from middoe.des_md import MD as MD
from middoe.des_pp import PP as PP
from middoe.iden_utils import Plotting_Results as Plotting_Results

def fun_globalizer(func_name): ...
def run_mbdoe_md(design_settings, model_structure, modelling_settings, core_num, framework_settings, round): ...
def run_mbdoe_pp(design_settings, model_structure, modelling_settings, core_num, framework_settings, round): ...
def write_excel(df_combined, experiment_number, excel_path) -> None: ...
def read_excel(file_path): ...
def save_rounds(j, ranking, k_optimal_value, rCC_values, J_k_values, result, theta_parameters, design_type, round_data, modelling_settings, scaled_params, estimation_settings, solver_parameters, framework_settings, obs, case, data_storage, model_structure): ...
def save_to_jac(results, filename) -> None: ...
def load_from_jac(filename): ...
def data_appender(df_combined, experiment_number, data_storage): ...
def add_norm_par(modelling_settings): ...
